paths:
  /api/carts/{cid}:
    get:
      summary: Gets an specific cart.
      tags:
        - Carts
      parameters:
          - in: path
            name: cid
            required: true
            description: Cart Id to search
            schema:
              type: string
      responses:
        200:
          description: The cart got succesfully found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        401:
          description: Unauthorized.
        404:
          description: Cart not found.
        500:
          description: Server internal error.
    delete:
      summary: Deletes all the products from a cart.
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          description: Cart's Id.
          schema:
            type: string
      responses:
        200:
          description: All the products deleted from the cart.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        401:
          description: Unahutorized.
        404:
          description: Parameters error.
        500:
          description: Server internal error.
  /api/carts/{uid}/products/{pid}:
    post:
      summary: Adds a product to a cart.
      tags:
        - Carts
      parameters:
        - in: path
          name: uid
          required: true
          description: User's Id.
          schema:
            type: string
        - in: path
          name: pid
          required: true
          description: Products's Id.
          schema:
            type: string
      responses:
        200:
          description: Product added to the cart.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        401:
          description: Unahutorized.
        404:
          description: Parameters error.
        500:
          description: Server internal error.
  /api/carts/{cid}/products/{pid}:
    delete:
      summary: Deletes one product from a cart.
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          description: Cart's Id.
          schema:
            type: string
        - in: path
          name: pid
          required: true
          description: Products's Id.
          schema:
            type: string
      responses:
        200:
          description: Product deleted from the cart.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        401:
          description: Unahutorized.
        404:
          description: Parameters error.
        500:
          description: Server internal error.
  /api/carts/{cid}/products/{pid}/user/{uid}:
    put:
      summary: Updates the quantity of one product from a cart.
      tags:
        - Carts
      parameters:
        - in: path
          name: cid
          required: true
          description: Cart's Id.
          schema:
            type: string
        - in: path
          name: pid
          required: true
          description: Product's Id.
          schema:
            type: string
        - in: path
          name: uid
          required: true
          description: User's Id.
          schema:
            type: string
        - in: body
          name: quantity
          required: true
          description: New quantity.
          schema:
            type: number
      responses:
        200:
          description: Quantity modified from the cart.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        401:
          description: Unahutorized.
        404:
          description: Parameters error.
        500:
          description: Server internal error.
  /api/carts/{cid}/purchase:
    post:
      summary: Purchase the cart.
      tags:
        - Carts
      parameters:
          - in: path
            name: cid
            required: true
            description: Cart's Id.
            schema:
              type: string
      responses:
        200:
          description: The cart got succesfully found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        401:
          description: Unauthorized.
        404:
          description: Cart not found.
        500:
          description: Server internal error.
components:
  schemas:
    Cart:
      type: object
      properties:
        id:
          type: string
          description: Cart's Id generated by the data base.
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          description: All the products that have been added to the cart.
        total:
          type: number
          description: How much the cart costs.
      example:
        id: 65b40359a67349b4bf9f51f4
        products: []
        total: 500
    Product:
      type: object
      properties:
        product:
          type: object
          properties:
            id:
              type: string
              description: Product's Id generated by the data base.
            title:
              type: string
              description: Product's title.
            description:
              type: string
              description: Product's description.
            price:
              type: number
              description: Product's price.
            code:
              type: string
              description: Product's unique code.
            stock:
              type: number
              description: Product's stock.
            thumbnails:
              type: array
              description: Paths to Product's images (if not images were given when created the app assigns a default img path).
            type:
              type: array
              description: Product's types.
            owner:
              type: array
              description: Product's owner Id. (if was created by an admin this field's value will be 'admin').
        quantity:
          type: number
          description: Amount of the product that is in the cart.
      example:
        id: 65bc0d887e23e242160d0e68
        title: Awesome Concrete Towels
        description: Adeptio venio canis viduo alias vulticulus uredo unde unde magnam. Armarium creo cruciamentum adeptio claro thalassinus rerum decretum terreo tenus. Stella vere artificiose virgo usitas denuo ipsam claustrum soleo adipisci.
        price: 565
        code: hKddimGpZJ
        stock: 66
        thumbnails: [{/img/default-product.jpg}]
        type: [{Music}]
        owner: admin 
    Ticket:
      type: object
      properties:
        id:
          type: string
          description: Ticket's Id generated by the data base.
        code:
          type: string
          description: Ticket's unique code generated by uuid.
        amount:
          type: number
          description: The price that was paid.
        purchaser:
          type: string
          description: Id of the user who bought the cart.
        purchase_datetime:
          type: date
          description: Date of the purchase.
      example:
        id: 65b40359a67349b4bf9f51f4
        code: 40d4d328-d275-45f4-bf05-c51bf0bc9a61
        amount: 565
        purchaser: 65b40359a67349b4bf9f51f6
        purchase_datetime: 2024-03-04T05:11:04.550Z


                